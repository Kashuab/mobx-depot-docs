<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9f5e59eb-5d0c-4a15-9cc7-0eb4b94ec53b" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript JSX File" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2MaUpzEmzIpgx7tGYWkhns5eQIG" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "C:/Users/Kyle/RubymineProjects/sentience",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.standard": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.standard": "",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "C:/Users/Kyle/RubymineProjects/mobx-gql-store/node_modules/jest",
    "nodejs_package_manager_path": "yarn",
    "ruby.rails.projectView.checked": "true",
    "ruby.structure.view.model.defaults.configured": "true",
    "settings.editor.selected.configurable": "settings.javascript.linters.eslint",
    "ts.external.directory.path": "C:\\Users\\Kyle\\RubymineProjects\\mobx-depot-next\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Kyle\RubymineProjects\todo-api\app\models" />
      <recent name="C:\Users\Kyle\RubymineProjects\todo-api\app\graphql\types\users" />
      <recent name="C:\Users\Kyle\RubymineProjects\mobx-depot-next\src\pages\docs" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Kyle\RubymineProjects\todo-api\app\graphql\types\todos" />
    </key>
  </component>
  <component name="RubyModuleManagerSettings">
    <option name="blackListedRootsPaths">
      <list>
        <option value="$PROJECT_DIR$/../todo-api" />
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Jest.buildSelection.can handle field args">
    <configuration name="DepotGQLClient" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/../mobx-gql-store/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/../mobx-gql-store" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/../mobx-gql-store/src/__tests__/DepotGQLClient.test.ts" />
      <test-names>
        <test-name value="DepotGQLClient" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="DepotGQLClient.can cache a response from a server" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/../mobx-gql-store/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/../mobx-gql-store" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/../mobx-gql-store/src/__tests__/DepotGQLClient.test.ts" />
      <test-names>
        <test-name value="DepotGQLClient" />
        <test-name value="can cache a response from a server" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="DepotGQLClient.can update the cache with a mutation" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/../mobx-gql-store/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/../mobx-gql-store" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/../mobx-gql-store/src/__tests__/DepotGQLClient.test.ts" />
      <test-names>
        <test-name value="DepotGQLClient" />
        <test-name value="can update the cache with a mutation" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="buildSelection.can handle field args" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/../mobx-gql-store/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/../mobx-gql-store" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/../mobx-gql-store/src/__tests__/buildSelection.test.ts" />
      <test-names>
        <test-name value="buildSelection" />
        <test-name value="can handle field args" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="buildSelection.should build a selection" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/../mobx-gql-store/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/../mobx-gql-store" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/../mobx-gql-store/src/__tests__/buildSelection.test.ts" />
      <test-names>
        <test-name value="buildSelection" />
        <test-name value="should build a selection" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.buildSelection.can handle field args" />
        <item itemvalue="Jest.buildSelection.should build a selection" />
        <item itemvalue="Jest.DepotGQLClient.can update the cache with a mutation" />
        <item itemvalue="Jest.DepotGQLClient.can cache a response from a server" />
        <item itemvalue="Jest.DepotGQLClient" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9f5e59eb-5d0c-4a15-9cc7-0eb4b94ec53b" name="Changes" comment="" />
      <created>1678005373333</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1678005373333</updated>
      <workItem from="1678005374358" duration="3609000" />
      <workItem from="1678047883800" duration="13512000" />
      <workItem from="1679161724732" duration="4909000" />
      <workItem from="1679254581113" duration="4929000" />
      <workItem from="1679259841312" duration="7204000" />
      <workItem from="1679377784730" duration="897000" />
      <workItem from="1679708605504" duration="99000" />
      <workItem from="1679708734979" duration="5786000" />
      <workItem from="1679720128507" duration="2238000" />
      <workItem from="1679780093767" duration="14221000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>